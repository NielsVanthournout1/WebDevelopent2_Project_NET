@model app.Models.ProgramDetailsViewModel
@{
    ViewData["Title"] = $"Opleiding: {Model.ProgramName}";
}

<div class="container mt-4">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")">Dashboard</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Model.ProgramName</li>
        </ol>
    </nav>

    <h1 class="mb-4">
        <i class="bi bi-mortarboard"></i> @Model.ProgramName
    </h1>

    <div class="card mb-4">
        <div class="card-header bg-light d-flex justify-content-between align-items-center">
            <h2 class="h5 mb-0">Geïnteresseerde Studiekiezers</h2>
            <span class="badge bg-primary">@Model.Candidates.Count Studiekiezers</span>
        </div>
        <div class="card-body p-0">
            @if (Model.Candidates.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover mb-0">
                        <thead>
                            <tr>
                                <th>Naam</th>
                                <th>Onderwijsinstelling</th>
                                <th>Studiegebied</th>
                                <th>Beurs</th>
                                <th>Registratiedatum</th>
                                <th>Opmerkingen</th>
                                <th>Acties</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var candidate in Model.Candidates)
                            {
                                <tr>
                                    <td>@candidate.CandidateName</td>
                                    <td>@candidate.Institution</td>
                                    <td>@candidate.FieldOfStudy</td>
                                    <td>@candidate.TradeShowName (@candidate.TradeShowDate?.ToString("dd-MM-yyyy"))</td>
                                    <td>@candidate.RegisteredAt?.ToString("dd-MM-yyyy HH:mm")</td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(candidate.Notes))
                                        {
                                            <button type="button" class="btn btn-sm btn-outline-info" 
                                                    data-bs-toggle="tooltip" data-bs-placement="left" 
                                                    title="@candidate.Notes">
                                                <i class="bi bi-info-circle"></i>
                                            </button>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                    <td>
                                        <a href="@Url.Action("EditCandidate", "Dashboard", new { id = candidate.CandidateId })" 
                                           class="btn btn-sm btn-outline-primary">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info m-3">
                    <i class="bi bi-info-circle"></i> Geen studiekiezers gevonden voor deze opleiding.
                </div>
            }
        </div>
    </div>

    <div class="card">
        <div class="card-header bg-light">
            <h2 class="h5 mb-0">Export Opties</h2>
        </div>
        <div class="card-body">
            <div class="d-flex gap-2">
                <button onclick="exportToExcel()" class="btn btn-success">
                    <i class="bi bi-file-earmark-excel"></i> Exporteer naar Excel
                </button>
                <button onclick="exportToCSV()" class="btn btn-secondary">
                    <i class="bi bi-file-earmark-text"></i> Exporteer naar CSV
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Initialize tooltips
        document.addEventListener('DOMContentLoaded', function() {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            });
        });

        // Export to Excel
        function exportToExcel() {
            // Create a table with the data
            const table = document.createElement('table');
            const headerRow = table.insertRow();
            
            // Add headers
            ['Naam', 'Onderwijsinstelling', 'Studiegebied', 'Beurs', 'Registratiedatum', 'Opmerkingen'].forEach(header => {
                const cell = headerRow.insertCell();
                cell.textContent = header;
            });
            
            // Add data rows
            @foreach (var candidate in Model.Candidates)
            {
                <text>
                const row = table.insertRow();
                row.insertCell().textContent = '@candidate.CandidateName';
                row.insertCell().textContent = '@candidate.Institution';
                row.insertCell().textContent = '@candidate.FieldOfStudy';
                row.insertCell().textContent = '@candidate.TradeShowName (@candidate.TradeShowDate?.ToString("dd-MM-yyyy"))';
                row.insertCell().textContent = '@candidate.RegisteredAt?.ToString("dd-MM-yyyy HH:mm")';
                row.insertCell().textContent = '@candidate.Notes';
                </text>
            }
            
            // Convert to CSV
            const tableHTML = table.outerHTML;
            const uri = 'data:application/vnd.ms-excel;base64,';
            const template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--><meta http-equiv="content-type" content="text/plain; charset=UTF-8"/></head><body><table>{table}</table></body></html>';
            
            // Replace placeholders with actual data
            const ctx = { worksheet: 'Worksheet', table: tableHTML };
            const data = template.replace(/{(\w+)}/g, (m, p) => ctx[p]);
            
            // Download
            const a = document.createElement('a');
            a.href = uri + btoa(unescape(encodeURIComponent(data)));
            a.download = '@Model.ProgramName - Studiekiezers.xls';
            a.click();
        }

        // Export to CSV
        function exportToCSV() {
            // Headers
            let csv = 'Naam,Onderwijsinstelling,Studiegebied,Beurs,Registratiedatum,Opmerkingen\n';
            
            // Add data rows
            @foreach (var candidate in Model.Candidates)
            {
                <text>
                csv += '@candidate.CandidateName.Replace(",", ";")';
                csv += ',';
                csv += '@(candidate.Institution?.Replace(",", ";") ?? "")';
                csv += ',';
                csv += '@(candidate.FieldOfStudy?.Replace(",", ";") ?? "")';
                csv += ',';
                csv += '@candidate.TradeShowName.Replace(",", ";") (@candidate.TradeShowDate?.ToString("dd-MM-yyyy"))';
                csv += ',';
                csv += '@candidate.RegisteredAt?.ToString("dd-MM-yyyy HH:mm")';
                csv += ',';
                csv += '@(candidate.Notes?.Replace(",", ";").Replace("\n", " ").Replace("\r", " ") ?? "")';
                csv += '\n';
                </text>
            }
            
            // Create download link
            const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = '@Model.ProgramName - Studiekiezers.csv';
            a.click();
            URL.revokeObjectURL(url);
        }
    </script>
}