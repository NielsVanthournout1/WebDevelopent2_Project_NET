@model IEnumerable<app.Models.CandidateViewModel>
@{
    ViewData["Title"] = "Kandidaten Beheren";
    var isAuthorized = Context.Session.GetString("GebruikerRol") == "1" || Context.Session.GetString("GebruikerRol") == "2";
}

@if (!isAuthorized)
{
    <div class="container mt-5">
        <div class="alert alert-danger">
            <h4><i class="bi bi-exclamation-triangle"></i> Toegang geweigerd</h4>
            <p>Deze pagina is alleen toegankelijk voor beheerders en teamverantwoordelijken.</p>
            <a href="@Url.Action("Index", "Dashboard")" class="btn btn-primary">Terug naar Dashboard</a>
        </div>
    </div>
    return;
}

<div class="container mt-4">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")">Dashboard</a></li>
            <li class="breadcrumb-item active" aria-current="page">Kandidaten Beheren</li>
        </ol>
    </nav>

    <h1 class="mb-4"><i class="bi bi-people-fill"></i> Kandidaten Beheren</h1>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show">
            <i class="bi bi-check-circle"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show">
            <i class="bi bi-exclamation-circle"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card">
        <div class="card-header bg-light d-flex justify-content-between align-items-center">
            <h2 class="h5 mb-0">Studiekiezers</h2>
            <div>
                <button id="bulkDeleteBtn" class="btn btn-danger" disabled>
                    <i class="bi bi-trash"></i> Geselecteerde Verwijderen
                </button>
            </div>
        </div>
        <div class="card-body p-0">
            <form id="bulkDeleteForm" asp-controller="Dashboard" asp-action="DeleteCandidates" method="post">
                @Html.AntiForgeryToken()
                <div class="table-responsive">
                    <table class="table table-striped table-hover mb-0">
                        <thead>
                            <tr>
                                <th>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="selectAll">
                                        <label class="form-check-label" for="selectAll">Alle</label>
                                    </div>
                                </th>
                                <th>ID</th>
                                <th>Voornaam</th>
                                <th>Achternaam</th>
                                <th>Geboortedatum</th>
                                <th>Instelling</th>
                                <th>Studiegebied</th>
                                <th>Acties</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var candidate in Model)
                            {
                                <tr>
                                    <td>
                                        <div class="form-check">
                                            <input class="form-check-input candidate-checkbox" type="checkbox" name="candidateIds" value="@candidate.CandidateId" id="candidate-@candidate.CandidateId">
                                        </div>
                                    </td>
                                    <td>@candidate.CandidateId</td>
                                    <td>@candidate.GivenName</td>
                                    <td>@candidate.Surname</td>
                                    <td>@(candidate.BirthDate?.ToString("dd-MM-yyyy") ?? "-")</td>
                                    <td>@(candidate.Institution ?? "-")</td>
                                    <td>@(candidate.FieldOfStudy ?? "-")</td>
                                    <td>
                                        <a href="@Url.Action("EditCandidate", "Dashboard", new { id = candidate.CandidateId })" class="btn btn-sm btn-primary">
                                            <i class="bi bi-pencil"></i> Bewerken
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const selectAllCheckbox = document.getElementById('selectAll');
            const candidateCheckboxes = document.querySelectorAll('.candidate-checkbox');
            const bulkDeleteBtn = document.getElementById('bulkDeleteBtn');
            const bulkDeleteForm = document.getElementById('bulkDeleteForm');
            
            // Select/deselect all checkboxes
            selectAllCheckbox.addEventListener('change', function() {
                candidateCheckboxes.forEach(checkbox => {
                    checkbox.checked = selectAllCheckbox.checked;
                });
                
                updateDeleteButtonState();
            });
            
            // Individual checkbox selection
            candidateCheckboxes.forEach(checkbox => {
                checkbox.addEventListener('change', function() {
                    updateDeleteButtonState();
                });
            });
            
            // Update delete button state
            function updateDeleteButtonState() {
                const selectedCount = document.querySelectorAll('.candidate-checkbox:checked').length;
                bulkDeleteBtn.disabled = selectedCount === 0;
                
                if (selectedCount > 0) {
                    bulkDeleteBtn.textContent = `Geselecteerde Verwijderen (${selectedCount})`;
                } else {
                    bulkDeleteBtn.textContent = 'Geselecteerde Verwijderen';
                }
            }
            
            // Bulk delete
            bulkDeleteBtn.addEventListener('click', function() {
                const selectedCount = document.querySelectorAll('.candidate-checkbox:checked').length;
                
                if (selectedCount > 0) {
                    if (confirm(`Weet je zeker dat je ${selectedCount} studiekiezer(s) wilt verwijderen? Deze actie kan niet ongedaan worden gemaakt.`)) {
                        bulkDeleteForm.submit();
                    }
                }
            });
        });
    </script>
}